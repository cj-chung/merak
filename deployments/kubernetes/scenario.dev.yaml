# Merak namespace
apiVersion: v1
kind: Namespace
metadata:
  name: merak
---
apiVersion: v1
kind: Service
metadata:
  name: scenario-manager-service
  namespace: merak
spec:
  selector:
    app: scenario-manager
  ports:
    - name: http
      port: 9090
      targetPort: 3000
      nodePort: 3000
  type: NodePort
---
# Merak Scenario-Manager Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scenario-manager
  namespace: merak
spec:
  replicas: 3
  selector:
    matchLabels:
      app: scenario-manager
  template:
    metadata:
      labels:
        app: scenario-manager
    spec:
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: scenario-manager
        image: cjchung4849/scenario-manager:dev
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 3000
---
apiVersion: apps/v1  # API version
kind: Deployment
metadata:
  name: scenario-redis-master # Unique name for the deployment
  namespace: merak
  labels:
    app: scenario-redis       # Labels to be applied to this deployment
spec:
  selector:
    matchLabels:     # This deployment applies to the Pods matching these labels
      app: scenario-redis
      role: master
      tier: backend
  replicas: 1        # Run a single pod in the deployment
  template:          # Template for the pods that will be created by this deployment
    metadata:
      labels:        # Labels to be applied to the Pods in this deployment
        app: scenario-redis
        role: master
        tier: backend
    spec:            # Spec for the container which will be run inside the Pod.
      containers:
      - name: scenario-redis-master
        image: redis
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
---        
apiVersion: v1
kind: Service        # Type of Kubernetes resource
metadata:
  name: scenario-redis-master # Name of the Kubernetes resource
  namespace: merak
  labels:            # Labels that will be applied to this resource
    app: scenario-redis
    role: master
    tier: backend
spec:
  ports:
  - port: 55000       # Map incoming connections on port 6379 to the target port 6379 of the Pod
    targetPort: 6379
  selector:          # Map any Pod with the specified labels to this service
    app: scenario-redis
    role: master
    tier: backend